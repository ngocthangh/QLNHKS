/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.LOAIPHONG;
import BUS.PHONG;
import DTO.DTO_LoaiPhong;
import DTO.DTO_Phong;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.JXTable;

/**
 *
 * @author Ngoc Thang
 */
public class QuanLyPhong extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyPhong
     */
    DefaultTableModel model;
    JXTable tablePhong; 
    ArrayList<DTO_Phong> dsPhong;
    ArrayList<DTO_LoaiPhong> dsLoaiPhong;
    int rowSelected = -1;
    public QuanLyPhong() {
        initComponents();
        model = new DefaultTableModel();
        tablePhong = new JXTable();
        model.addColumn("STT");
        model.addColumn("Mã Phòng");
        model.addColumn("Tên Phòng");
        model.addColumn("Loại Phòng");
        model.addColumn("Tình Trạng");
        tablePhong.setModel(model);
        tablePhong.setEditable(false);
        LoadLoaiPhong();
        LoadData();
        PanePhong.setViewportView(tablePhong);
        tablePhong.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent evt) {
                tableMonAn_MouseClicked(evt);
            }

            private void tableMonAn_MouseClicked(MouseEvent evt) {
                rowSelected = tablePhong.getSelectedRow();
                txtMaPhong.setText(dsPhong.get(rowSelected).getMaPhong());
                txtTenPhong.setText(dsPhong.get(rowSelected).getTenPhong());
                for (int i = 0; i < cbxLoaiPhong.getItemCount(); i++) {
                    if(cbxLoaiPhong.getItemAt(i).toString().contains(dsPhong.get(rowSelected).getLoaiPhong()))
                        cbxLoaiPhong.setSelectedIndex(i);
                }
                for (int i = 0; i < cbxTinhTrang.getItemCount(); i++) {
                    if(i == dsPhong.get(rowSelected).getTinhTrang())
                        cbxTinhTrang.setSelectedIndex(i);
                }
            }
        });
    }
    
    public void LoadLoaiPhong(){
        try {
            dsLoaiPhong = LOAIPHONG.getAll();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Không thể lấy danh sách loại phòng!");
            return;
        }
        if(dsLoaiPhong != null){
            for (int i = 0; i < dsLoaiPhong.size(); i++) {
                String s = dsLoaiPhong.get(i).getMaLoaiPhong() + " - " + dsLoaiPhong.get(i).getTenLoaiPhong();
                cbxLoaiPhong.addItem(s);
            }
        }
    }
    
    public void LoadData(){
        if(dsPhong != null)
            for (int i = 0; i < dsPhong.size(); i++) {
                model.removeRow(0);
            }
        try {
            dsPhong = PHONG.getAll();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Không lấy danh sách phòng!");
            return;
        }
        for (int i = 0; i < dsPhong.size(); i++) {
            Vector vt = new Vector();
            vt.add(i + 1);
            vt.add(dsPhong.get(i).getMaPhong());
            vt.add(dsPhong.get(i).getTenPhong());
            String loaiphong = "";
//            if(dsLoaiPhong == null || dsLoaiPhong.size() == 0){
//                try {
//                    dsLoaiPhong = LOAIPHONG.getAll();
//                } catch (Exception ex) {
//                    JOptionPane.showMessageDialog(this, "Không thể lấy danh sách loại phòng!");
//                    return;
//                }
//            }
            for (int j = 0; j < dsLoaiPhong.size(); j++) {
                if(dsLoaiPhong.get(j).getMaLoaiPhong().equals(dsPhong.get(i).getLoaiPhong())){
                    loaiphong = dsLoaiPhong.get(j).getTenLoaiPhong();
                    break;
                }
            }
            vt.add(loaiphong);
            int tinhtrang = dsPhong.get(i).getTinhTrang();
            switch(tinhtrang){
                case 0:
                    vt.add("Trống");
                    break;
                case 1:
                    vt.add("Đang đặt");
                    break;
                case 2: 
                    vt.add("Đang thuê");
                    break;
                default:vt.add("");
            }
            model.addRow(vt);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTenPhong = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbxTinhTrang = new javax.swing.JComboBox<>();
        cbxLoaiPhong = new javax.swing.JComboBox<>();
        btnThemPhong = new javax.swing.JButton();
        btnSuaPhong = new javax.swing.JButton();
        btnNhapMoi = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        PanePhong = new javax.swing.JScrollPane();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông Tin Phòng"));

        jLabel2.setText("Tên Phòng");

        txtMaPhong.setEditable(false);

        jLabel3.setText("Tình Trạng");

        jLabel1.setText("Mã Phòng");

        jLabel4.setText("Loại Phòng");

        cbxTinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trống", "Đang đặt", "Đang thuê" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenPhong)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxTinhTrang, 0, 257, Short.MAX_VALUE)
                    .addComponent(cbxLoaiPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(cbxLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cbxTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btnThemPhong.setText("Thêm Phòng");
        btnThemPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPhongActionPerformed(evt);
            }
        });

        btnSuaPhong.setText("Sửa Phòng");
        btnSuaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaPhongActionPerformed(evt);
            }
        });

        btnNhapMoi.setText("Nhập Mới");
        btnNhapMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapMoiActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh Sách Phòng"));

        jLabel5.setText("Tìm Kiếm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanePhong)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(PanePhong, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
        );

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClose.setText("Đóng");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnThemPhong)
                        .addGap(36, 36, 36)
                        .addComponent(btnSuaPhong)
                        .addGap(29, 29, 29)
                        .addComponent(btnNhapMoi)
                        .addGap(352, 352, 352))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnClose)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemPhong)
                    .addComponent(btnSuaPhong)
                    .addComponent(btnNhapMoi))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnDelete))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPhongActionPerformed
        String MaPhong = "", TenPhong = "", LoaiPhong = "";
        int TinhTrang;
        MaPhong = txtMaPhong.getText();
        TenPhong = txtTenPhong.getText();
        LoaiPhong = cbxLoaiPhong.getSelectedItem().toString().substring(0, cbxLoaiPhong.getSelectedItem().toString().indexOf('-') - 1);
        TinhTrang = 0;
        if(TenPhong.equals("") || cbxTinhTrang.getSelectedIndex() < 0 || cbxLoaiPhong.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null,"Vui lòng điền và chọn đầy đủ thông tin!");
            return;
        }

        DTO_Phong phong = new DTO_Phong(MaPhong, TenPhong, LoaiPhong, TinhTrang);
        try {
            PHONG.InsertNew(phong);
            LoadData();
            JOptionPane.showMessageDialog(null,"Thêm phòng thành công!");
            rowSelected = -1;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Không thể thêm phòng \nMã phòng đã tồn tại!");
            return;
        }
    }//GEN-LAST:event_btnThemPhongActionPerformed

    private void btnSuaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaPhongActionPerformed
        String MaPhong = "", TenPhong = "", LoaiPhong = "";
        int TinhTrang;
        MaPhong = txtMaPhong.getText();
        TenPhong = txtTenPhong.getText();
        LoaiPhong = cbxLoaiPhong.getSelectedItem().toString().substring(0, cbxLoaiPhong.getSelectedItem().toString().indexOf('-') - 1);
        TinhTrang = cbxTinhTrang.getSelectedIndex();
        try{
            DTO_Phong phong = PHONG.getById(MaPhong);
            if(phong == null){
                JOptionPane.showMessageDialog(null,"Mã phòng không tồn tại!\nVui lòng chọn 1 phòng từ danh sách phòng");
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Không thể kết nối!");
            return;
        }
        if(TenPhong.equals("") || cbxTinhTrang.getSelectedIndex() < 0 || cbxLoaiPhong.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null,"Vui lòng điền và chọn đầy đủ thông tin!");
            return;
        }

        DTO_Phong phong = new DTO_Phong(MaPhong, TenPhong, LoaiPhong, TinhTrang);
        try {
            PHONG.Update(phong);
            LoadData();
            JOptionPane.showMessageDialog(null,"Cập nhật phòng thành công!");
            rowSelected = -1;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Không thể cập nhật phòng");
            return;
        }
    }//GEN-LAST:event_btnSuaPhongActionPerformed

    private void btnNhapMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapMoiActionPerformed
        String MaPhong = "";
        try {
            MaPhong = PHONG.AutoGenerateID();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Không thể kết nối!");
        }
        txtMaPhong.setText(MaPhong);
        txtTenPhong.setText("");
        cbxLoaiPhong.setSelectedIndex(0);
        cbxTinhTrang.setSelectedIndex(0);
    }//GEN-LAST:event_btnNhapMoiActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String MaPhong = "", TenPhong = "";
        double DonGia;
        if(rowSelected < 0){
            JOptionPane.showMessageDialog(null,"Vui lòng chọn phòng cần xóa!");
            return;
        }
        MaPhong = tablePhong.getValueAt(rowSelected, 1).toString();
        TenPhong = tablePhong.getValueAt(rowSelected, 2).toString();
        if(JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa phòng " + TenPhong, "Xác nhận", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            try {
                PHONG.Delete(MaPhong);
                LoadData();
                JOptionPane.showMessageDialog(null,"Xóa phòng thành công!");
                rowSelected = -1;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"Không thể xóa phòng!");
                return;
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyPhong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane PanePhong;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNhapMoi;
    private javax.swing.JButton btnSuaPhong;
    private javax.swing.JButton btnThemPhong;
    private javax.swing.JComboBox<String> cbxLoaiPhong;
    private javax.swing.JComboBox<String> cbxTinhTrang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtTenPhong;
    // End of variables declaration//GEN-END:variables
}
